/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: iQuote API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package sl.com.eightdigitz.client.apis

import io.reactivex.Single
import retrofit2.http.GET
import retrofit2.http.Header
import retrofit2.http.Headers
import retrofit2.http.POST
import sl.com.eightdigitz.client.models.*

@JvmSuppressWildcards
interface AuthApi {

    @retrofit2.http.FormUrlEncoded
    @POST("https://dev-ahamad.us.auth0.com/passwordless/start")
    fun getOTP(
        @retrofit2.http.Field("client_id") clientId: String,
        @retrofit2.http.Field("connection") connection: String,
        @retrofit2.http.Field("send") send: String,
        @retrofit2.http.Field("phone_number") phoneNumber: String
    ): Single<OTPResponse>

    @retrofit2.http.FormUrlEncoded
    @POST("https://dev-ahamad.us.auth0.com/oauth/token")
    fun getOTPToken(
        @retrofit2.http.Field("client_id") clientId: String,
        @retrofit2.http.Field("grant_type") grantType: String,
        @retrofit2.http.Field("username") phoneNumber: String,
        @retrofit2.http.Field("otp") otp: String,
        @retrofit2.http.Field("realm") realm: String
    ) : Single<OTPTokenResponse>

    @GET("user")
    fun getUserByFefToken(
        @retrofit2.http.Header("x-id-token") idToken: String
    ) : Single<UserByRefTokenResponse>



    @Headers(
        "X-Operation-Id: auth_get_logout",
        "Content-Type: application/json"
    )
    @GET("logout")
    fun authGetLogout(): Single<SuccessResponse>

    @retrofit2.http.FormUrlEncoded
    @Headers(
        "X-Operation-Id: auth_post_register"
    )
    @POST("user")
    fun authPostRegister(
        @retrofit2.http.Header("x-id-token") idToken: String,
        @retrofit2.http.Field("MobileNo") mobileNo: String,
        @retrofit2.http.Field("FullName") fullName: String,
        @retrofit2.http.Field("DefaultLanguage") defaultLanguage: String,
        @retrofit2.http.Field("Email") email: String,
        @retrofit2.http.Field("DOB") dob: String,
        @retrofit2.http.Field("Role") role: String,
        @retrofit2.http.Field("ProfilePicture") profilePicture: String,
        @retrofit2.http.Field("ProfileVideo") profileVideo: String,
        @retrofit2.http.Field("ProfileBanner") profileBanner: String?
    ): Single<AuthRegisterResponse>

    /**
     * Update Password
     *
     * The endpoint is owned by integration service owner
     * @param password Password (required)
     * @param currentPassword Current password (required)
     * @param passwordConfirmation Password confirmation (required)
     * @param accept Set to &#x60;application/json&#x60; (required)
     */
    @retrofit2.http.FormUrlEncoded
    @Headers(
        "X-Operation-Id: auth_post_update_password"
    )
    @POST("password/edit")
    fun authPostUpdatePassword(
        @retrofit2.http.Field("password") password: String,
        @retrofit2.http.Field("current_password") currentPassword: String,
        @retrofit2.http.Field("password_confirmation") passwordConfirmation: String
    ): Single<SuccessResponse>

}