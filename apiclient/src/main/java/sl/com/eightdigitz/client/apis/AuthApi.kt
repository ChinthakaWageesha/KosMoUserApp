/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: iQuote API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package sl.com.eightdigitz.client.apis

import io.reactivex.Single
import retrofit2.http.GET
import retrofit2.http.Headers
import retrofit2.http.POST
import retrofit2.http.PUT
import sl.com.eightdigitz.client.apiSupports.models.FirebaseToken
import sl.com.eightdigitz.client.apiSupports.requests.RegisterRequest
import sl.com.eightdigitz.client.apiSupports.requests.UpdateUserRequest
import sl.com.eightdigitz.client.apiSupports.responses.*

@JvmSuppressWildcards
interface AuthApi {

    @retrofit2.http.FormUrlEncoded
    @POST("https://dev-ahamad.us.auth0.com/passwordless/start")
    fun getOTP(
        @retrofit2.http.Field("client_id") clientId: String,
        @retrofit2.http.Field("connection") connection: String,
        @retrofit2.http.Field("send") send: String,
        @retrofit2.http.Field("phone_number") phoneNumber: String
    ): Single<OTPResponse>

    @retrofit2.http.FormUrlEncoded
    @POST("https://dev-ahamad.us.auth0.com/oauth/token")
    fun getOTPToken(
        @retrofit2.http.Field("client_id") clientId: String,
        @retrofit2.http.Field("grant_type") grantType: String,
        @retrofit2.http.Field("username") phoneNumber: String,
        @retrofit2.http.Field("otp") otp: String,
        @retrofit2.http.Field("realm") realm: String
    ): Single<OTPTokenResponse>

    @GET("user/get-user-by-id-token")
    fun getUserByIDToken(
        @retrofit2.http.Header("x-id-token") idToken: String
    ): Single<UserResponse>

    @Headers(
        "Content-Type: application/x-www-form-urlencoded"
    )
    @POST("user")
    fun authPostRegister(
        @retrofit2.http.Header("x-id-token") idToken: String,
        @retrofit2.http.Body registerRequest: RegisterRequest
    ): Single<UserResponse>

    @Headers(
        "Content-Type: application/x-www-form-urlencoded"
    )
    @PUT("user")
    fun updateUser(
        @retrofit2.http.Header("x-id-token") idToken: String,
        @retrofit2.http.Body updateUserRequest: UpdateUserRequest
    ): Single<UserResponse>

    @Headers(
        "Content-Type: application/x-www-form-urlencoded"
    )
    @POST("firebase-device-token")
    fun registerFirebaseToken(
        @retrofit2.http.Body request: FirebaseToken
    ): Single<FirebaseTokenResponse>
}