/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: iQuote API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package sl.com.eightdigitz.client.apis

import sl.com.eightdigitz.client.models.*
import io.reactivex.Single
import retrofit2.http.GET
import retrofit2.http.Headers
import retrofit2.http.POST

@JvmSuppressWildcards
interface BusinessApi {
    /**
     * List
     * This endpoint returns paginated list of the entity
     * The endpoint is owned by integration service owner
     * @param accept &#x60;application/json&#x60; (required)
     * @param q text to search  (optional)
     */
    @Headers(
        "X-Operation-Id: business_get_list",
        "Content-Type: application/json"
    )
    @GET("business")
    fun businessGetList(
        @retrofit2.http.Query("q") q: String?
    ): Single<BusinessListResponse>

    /**
     * view
     * This endpoint view requested entity
     * The endpoint is owned by integration service owner
     * @param accept &#x60;application/json&#x60; (required)
     * @param id ID of the entity (required)
     */
    @Headers(
        "X-Operation-Id: business_get_view",
        "Content-Type: application/json"
    )
    @GET("business/{id}")
    fun businessGetView(
        @retrofit2.http.Path("id") id: String
    ): Single<BusinessViewResponse>

    /**
     * Attach Services
     * This endpoint attach given services to the business
     * The endpoint is owned by integration service owner
     * @param accept &#x60;application/json&#x60; (required)
     * @param serviceIds comma separated string of service ids that wish to attach current users business (required)
     */
    @retrofit2.http.FormUrlEncoded
    @Headers(
        "X-Operation-Id: business_post_attach_services"
    )
    @POST("business/services")
    fun businessPostAttachServices(
        @retrofit2.http.Field("service_ids") serviceIds: String
    ): Single<SuccessResponse>

    /**
     * Save
     * This endpoint save the record in DB
     * The endpoint is owned by integration service owner
     * @param accept &#x60;application/json&#x60; (required)
     * @param registeredName registered name of the business (required)
     * @param serviceName service name of the business (required)
     * @param registeredAddress registered address of the business (required)
     * @param serviceAddress service address of the business (required)
     * @param nZBN New Zealand business number (required)
     * @param serviceRadius radius to be served in km (required)
     */
    @retrofit2.http.FormUrlEncoded
    @Headers(
        "X-Operation-Id: business_post_save"
    )
    @POST("business")
    fun businessPostSave(
        @retrofit2.http.Field("registered_name") registeredName: String,
        @retrofit2.http.Field("service_name") serviceName: String,
        @retrofit2.http.Field("registered_address") registeredAddress: String,
        @retrofit2.http.Field("service_address") serviceAddress: String,
        @retrofit2.http.Field("NZBN") nZBN: String,
        @retrofit2.http.Field("service_radius") serviceRadius: String
    ): Single<BusinessSaveResponse>

    /**
     * Save image
     * This endpoint save the images
     * The endpoint is owned by integration service owner
     * @param accept &#x60;application/json&#x60; (required)
     * @param image image to be saved (required)
     */
    @retrofit2.http.Multipart
    @Headers(
        "X-Operation-Id: business_post_save_image"
    )
    @POST("business/images")
    fun businessPostSaveImage(
        @retrofit2.http.Part("image") image: String
    ): Single<BusinessSaveImageResponse>

}
